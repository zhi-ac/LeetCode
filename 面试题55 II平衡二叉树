/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 //递归 需要用boolean变量
class Solution {
    boolean flag = false;
    public boolean isBalanced(TreeNode root) {
        dfs(root);
        return !flag;
    }
    public int dfs(TreeNode root){
        if(root==null||flag) return -1;
        int left = dfs(root.left);
        int right = dfs(root.right);
        if(Math.abs(left-right)>1){
            flag = true;
        }
        int height = Math.max(left,right)+1;
        return height;
    }
}

//用-1代替boolean变量
class Solution {
    public boolean isBalanced(TreeNode root) {
        return dfs(root)!=-1;
    }
    public int dfs(TreeNode root){
        if(root==null) return 0;
        int left = dfs(root.left);
        if(left==-1) return -1;
        int right = dfs(root.right);
        if(right == -1 ) return -1;
        return Math.abs(left-right)<=1?Math.max(left,right)+1:-1;
    }
}

class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root==null) return true;
        return Math.abs(dfs(root.left)-dfs(root.right))<=1&&isBalanced(root.left)&&isBalanced(root.right);
    }
    public int dfs(TreeNode root){
        if(root==null) return 0;
        return Math.max(dfs(root.left),dfs(root.right))+1;
    }
}
