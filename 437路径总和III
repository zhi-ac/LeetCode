/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int time = 0;
    public int pathSum(TreeNode root, int sum) {
        if(root==null) return 0;
        dfs(root,sum,0);
        pathSum(root.left,sum);
        pathSum(root.right,sum);
        return time;
    }
    public void dfs(TreeNode root,int sum,int total){
    if(root == null) return;
    total+=root.val;
    if(sum==total){
        time++;
    }   
    dfs(root.left,sum,total);
    dfs(root.right,sum,total);
    }
}


//减少一个变量
class Solution {
    int time = 0;
    public int pathSum(TreeNode root, int sum) {
        if(root==null) return 0;
        dfs(root,sum);
        pathSum(root.left,sum);
        pathSum(root.right,sum);
        return time;
    }
    public void dfs(TreeNode root,int sum){
    if(root == null) return;
    sum-=root.val;
    if(sum==0){
        time++;
    }   
    dfs(root.left,sum);
    dfs(root.right,sum);
    }
}

//不用全局变量
class Solution {
    public int pathSum(TreeNode root, int sum) {
        if(root==null) return 0;
        return dfs(root,sum)+pathSum(root.left,sum)+pathSum(root.right,sum);
    }
    public int dfs(TreeNode root,int sum){
    if(root == null) return 0 ;
    sum-=root.val;
    return (sum==0?1:0)+  dfs(root.left,sum)+dfs(root.right,sum);
    }
}
